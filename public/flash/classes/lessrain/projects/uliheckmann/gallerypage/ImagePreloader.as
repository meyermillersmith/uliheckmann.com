import lessrain.lib.utils.loading.FileItem;import lessrain.lib.utils.loading.FileListener;import lessrain.lib.utils.loading.PriorityLoader;import lessrain.projects.uliheckmann.gallerypage.GalleryMediaFile;/** * @author Thomas Meyer, Less Rain (thomas@lessrain.com) */class lessrain.projects.uliheckmann.gallerypage.ImagePreloader implements FileListener{	private var _targetMC:MovieClip;	private var _loaderMC : MovieClip;	private var _mediaFile : GalleryMediaFile;	private var _isLoaded:Boolean;		public function ImagePreloader(targetMC_:MovieClip, mediaFile_:GalleryMediaFile)	{		_targetMC=targetMC_;		_isLoaded=false;		_mediaFile=mediaFile_;	}		public function initialize(priority_:Number):Void	{		_loaderMC = _targetMC.createEmptyMovieClip("holder",1);		_targetMC._visible=false;		PriorityLoader.getInstance().addFile( _loaderMC, _mediaFile.src, this, priority_, "img" );	}		private function onImageLoaded():Void	{		_isLoaded=true;	}		public function finalize():Void	{		_loaderMC.removeMovieClip();		_targetMC.removeMovieClip();		_mediaFile=null;	}		public function get targetMC():MovieClip { return _targetMC; }	public function set targetMC(value:MovieClip):Void { _targetMC=value; }		public function get id():String { return _mediaFile.id; }		public function get isLoaded():Boolean { return _isLoaded; }	public function set isLoaded(value:Boolean):Void { _isLoaded=value; }			public function onLoadStart(file : FileItem) : Boolean {		return null;	}	public function onLoadComplete(file : FileItem) : Void {		onImageLoaded();	}	public function onLoadProgress(file : FileItem, bytesLoaded : Number, bytesTotal : Number, percent : Number) : Void {	}}