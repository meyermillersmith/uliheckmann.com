import lessrain.lib.utils.Proxy;/** * @author Thomas Meyer, Less Rain (thomas@lessrain.com) */class lessrain.projects.uliheckmann.sound.StreamingSound{	private var _targetMC:MovieClip;	private var _src:String;	private var _loop:Number;	private var _sound : Sound;	private var _loopCount : Number;		public function StreamingSound(targetMC:MovieClip)	{		_targetMC=targetMC;		_loop=1;	}		public function initialize():Void	{		_sound = new Sound(_targetMC);		if (_loop!=1) _sound.onSoundComplete = Proxy.create(this, onSoundComplete);	}		public function finalize():Void	{		stop();		_sound = null;		_targetMC.removeMovieClip();	}		public function start():Void	{		initialize();		_sound.loadSound(_src, true);	}		public function stop():Void	{		_sound.stop(  );		_sound = null;	}		public function setVolume(volume:Number):Void	{		_sound.setVolume(volume);	}		public function setPan(pan:Number):Void	{		_sound.setPan(pan);	}		private function onSoundComplete():Void	{		_loopCount++;		if (_loopCount<_loop || _loop==0) start();	}		public function get src():String { return _src; }	public function set src(value:String):Void { _src=value; }	public function get loop():Number { return _loop; }	public function set loop(loop_:Number):Void { _loop=loop_; }		public function get targetMC():MovieClip { return _targetMC; }	public function set targetMC(value:MovieClip):Void { _targetMC=value; }}