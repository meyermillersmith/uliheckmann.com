import flash.display.BitmapData;import flash.filters.BlurFilter;import lessrain.lib.utils.events.IDistributor;import lessrain.lib.utils.graphics.ShapeUtils;import lessrain.lib.utils.loading.FileListener;import lessrain.projects.uliheckmann.config.GlobalSettings;import lessrain.projects.uliheckmann.gallerypage.GalleryMediaFile;import lessrain.projects.uliheckmann.gallerypage.Image;/** * @author Thomas Meyer, Less Rain (thomas@lessrain.com) */class lessrain.projects.uliheckmann.gallerypage.BlurImage extends Image implements FileListener, IDistributor{	private static var BLUR_WIDTH:Number = 10;		private var _targetMC:MovieClip;	private var _blurFilter : BlurFilter;	private var _bottomMC : MovieClip;	private var _topFillMC : MovieClip;	private var _bottomFillMC : MovieClip;	private var _bottomImageMC : MovieClip;		private var _blurBitmap : BitmapData;	public function BlurImage(targetMC_:MovieClip, mediaFile_:GalleryMediaFile)	{		super(targetMC_, mediaFile_);	}		public function initialize():Void	{		super.initialize();		_bottomMC = _targetMC.createEmptyMovieClip("bottom",2);		_bottomFillMC = _bottomMC.createEmptyMovieClip("fill",1);		_bottomImageMC = _bottomMC.createEmptyMovieClip("img",2);				_tween.tweenDuration = 1000;	}		private function onImageLoaded():Void	{		_blurFilter = new BlurFilter(BLUR_WIDTH,BLUR_WIDTH,2);		_advancedColor.brightOffset=0;		_advancedColor.alphaOffset=-255;		super.onImageLoaded();		_advancedColor.brightOffset=0;		_advancedColor.alphaOffset=-255;	}		private function setBlurBitmap():Void	{		var extraWidth:Number=0;		if (GlobalSettings.getInstance().enableColorFill && (_imageRect.width<_fullscreenWidth)) extraWidth=BLUR_WIDTH;				_blurBitmap = new BitmapData( _imageRect.width+extraWidth, _imageRect.height, true, _fillColor );		_blurBitmap.copyPixels(_sourceBitmap, _imageRect, _zeroPoint);		_blurBitmap.applyFilter( _blurBitmap, _imageRect, _zeroPoint, _blurFilter);		_bottomImageMC.attachBitmap(_blurBitmap,1,"always",GlobalSettings.getInstance().enableFullscreen);				if (GlobalSettings.getInstance().enableFullscreen || GlobalSettings.getInstance().enableColorFill)		{			if (GlobalSettings.getInstance().enableColorFill && (_imageRect.width<_fullscreenWidth))			{				if (_mediaFile.align=="right")				{					_bottomImageMC._x=_fullscreenWidth-_imageRect.width;					ShapeUtils.drawRectangle(_bottomFillMC,0,0,_fullscreenWidth-_imageRect.width+0.5,_imageRect.height,_fillColor,100);				}				else ShapeUtils.drawRectangle(_bottomFillMC,_imageRect.width,0,_fullscreenWidth-_imageRect.width,_imageRect.height,_fillColor,100);			}			else			{				if (_mediaFile.align=="right")				{					_bottomImageMC._x=_fullscreenWidth-_imageRect.width;				}			}		}		else		{				if (_mediaFile.align=="right")				{					_bottomImageMC._x=GlobalSettings.getInstance().stageWidth-_imageRect.width;				}		}	}		public function show():Void	{		if (!_isShowing)		{			_targetMC._visible=true;			_isShowing = true;			_tween.reset();			_tween.tweenDuration = 1200;			_tween.setTweenProperty('alphaOffset',-255,0);			_tween.setTweenProperty('brightOffset',255,0);			_tween.start();		}	}		public function hide():Void	{		if (_isShowing)		{			setBlurBitmap();						_isShowing = false;			_tween.reset();			_tween.tweenDuration = 600;			_tween.setTweenProperty('alphaOffset',0,-255);			_tween.start();		}	}		public function finalize():Void	{		_blurBitmap.dispose();		_bottomMC.removeMovieClip();		super.finalize();	}}